# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not neceesary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse lazily follows any focus (window or workspace)
on-focus-changed = ['move-mouse window-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical = 0
outer.left = 0
outer.bottom = 0
outer.top = 0
outer.right = 0

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec] # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true # If you don't touch "exec" section,
[exec.env-vars] # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

## Unmanaged windows (floating)

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.calculator'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.kagi.kagimacOS'
if.window-title-regex-substring = '^(General|Appearance|Tabs|Browsing|Sync|Passwords|Search|Privacy|Websites|Advanced|Plus|Extensions|Completions)$'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.kagi.kagimacOS'
if.window-title-regex-substring = '^$'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.kapeli.dashdoc'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.okta.mobile'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.runningwithcrayons.Alfred-Preferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.yubico.yubioath'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-Elements.Settings'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-EventViewer'
run = 'layout floating'


## Workspace assignments
### Need to be after the unmanaged windows, otherwise we would move all
### Orion windows to the workspace B

[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = 'move-node-to-workspace M' # [M]usic

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'move-node-to-workspace N' # [N]otes

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace B' # [B]rowser

[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = 'move-node-to-workspace B' # [B]rowser

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace B' # [B]rowser

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace D' # [D]iscord

[[on-window-detected]]
if.app-id = 'com.jetbrains.intellij'
run = 'move-node-to-workspace C'     # [C]ode

[[on-window-detected]]
if.app-id = 'com.kagi.kagimacOS'
run = 'move-node-to-workspace B' # [B]rowser

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace M' # [M]usic

[[on-window-detected]]
if.app-id = 'com.tapbots.Tweetbot'
run = 'move-node-to-workspace H'   # C[h]at

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = 'move-node-to-workspace H'        # C[h]at

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'move-node-to-workspace B'         # [B]rowser

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace N' # [N]otes

[[on-window-detected]]
if.app-id = 'org.alacritty'
run = 'move-node-to-workspace T' # [T]erminal

[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'
run = 'move-node-to-workspace H'    # C[h]at

[workspace-to-monitor-force-assignment]
M = 'secondary'
D = 'secondary'
H = 'secondary'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# Change focus window with Ctrl+Alt+HJKL
ctrl-alt-h = 'focus left --boundaries-action wrap-around-all-monitors --boundaries all-monitors-outer-frame'
ctrl-alt-j = 'focus down --boundaries-action wrap-around-all-monitors --boundaries all-monitors-outer-frame'
ctrl-alt-k = 'focus up --boundaries-action wrap-around-all-monitors --boundaries all-monitors-outer-frame'
ctrl-alt-l = 'focus right --boundaries-action wrap-around-all-monitors --boundaries all-monitors-outer-frame'

# Swap windows with Ctrl+Shift+Alt+HJKL
ctrl-shift-alt-h = 'move left'
ctrl-shift-alt-j = 'move down'
ctrl-shift-alt-k = 'move up'
ctrl-shift-alt-l = 'move right'

# Move node to next/previous monitor with Ctrl+Alt+NP
ctrl-alt-n = 'move-node-to-monitor --wrap-around next'
ctrl-alt-p = 'move-node-to-monitor --wrap-around prev'

# Move workspace to next/previous monitor with Ctrl+Alt+ShiftNP
ctrl-alt-shift-n = 'move-workspace-to-monitor --wrap-around next'
ctrl-alt-shift-p = 'move-workspace-to-monitor --wrap-around prev'

# Maximize window with Ctrl+Alt+M
ctrl-alt-m = 'fullscreen'

# Toggle floating window with Ctrl+Alt+T
ctrl-alt-t = 'layout floating tiling'

# Native maximize window with Ctrl+Alt+F
ctrl-alt-f = 'macos-native-fullscreen'

# Native minimize window with Ctrl+Alt+Z
ctrl-alt-z = 'macos-native-minimize'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-alt-slash = 'layout tiles horizontal vertical'
ctrl-alt-backslash = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-alt-minus = 'resize smart -50'
ctrl-alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-shift-1 = 'workspace 1'
alt-1 = 'workspace T'
alt-2 = 'workspace B'
alt-3 = 'workspace C'
alt-4 = 'workspace N'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace M'
alt-9 = 'workspace H'
alt-0 = 'workspace D'
alt-backtick = 'workspace-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-alt-1 = ['move-node-to-workspace T', 'workspace T']
ctrl-alt-2 = ['move-node-to-workspace B', 'workspace B']
ctrl-alt-3 = ['move-node-to-workspace C', 'workspace C']
ctrl-alt-4 = ['move-node-to-workspace N', 'workspace N']
ctrl-alt-5 = ['move-node-to-workspace 5', 'workspace 5']
ctrl-alt-6 = ['move-node-to-workspace 6', 'workspace 6']
ctrl-alt-7 = ['move-node-to-workspace 7', 'workspace 7']
ctrl-alt-8 = ['move-node-to-workspace M', 'workspace M']
ctrl-alt-9 = ['move-node-to-workspace H', 'workspace H']
ctrl-alt-0 = ['move-node-to-workspace D', 'workspace D']

# Move node to next/previous workspace with Ctrl+Alt+Left/Right
ctrl-alt-left = 'workspace --wrap-around prev'
ctrl-alt-right = 'workspace --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-alt-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
space = [
    'reload-config',
    "exec-and-forget osascript -e 'display notification \"Config reloaded\" with title \"Aerospace\"'",
    'mode main',
]
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle layout
backspace = ['close-all-windows-but-current', 'mode main']

ctrl-alt-h = ['join-with left', 'mode main']
ctrl-alt-j = ['join-with down', 'mode main']
ctrl-alt-k = ['join-with up', 'mode main']
ctrl-alt-l = ['join-with right', 'mode main']
